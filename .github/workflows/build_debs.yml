name: build_debs

on:
  push:
  workflow_dispatch:

jobs:

  build-source-debs:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        path: robotraconteur_debian_build
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install 
        pbuilder debootstrap devscripts git-buildpackage 
        debian-keyring  debian-archive-keyring dh-make -qq
    - name: build source debs
      run: python3 robotraconteur_debian_build/scripts/build_src_deb.py
    - name: archive out
      uses: actions/upload-artifact@v2
      with:
        name: 'source-debs'
        path: out/*

  build-debian-buster:    
    runs-on: ubuntu-20.04
    needs: build-source-debs
    timeout-minutes: 720
    strategy:
      matrix:
        config:
          - os: debian
            arch: amd64
            dist: buster
          # - os: debian
          #   arch: armhf
          #   dist: buster
          # - os: debian
          #   arch: arm64
          #   dist: buster
          # - os: raspbian
          #   arch: armhf
          #   dist: buster
          - os: debian
            arch: amd64
            dist: bullseye
    steps:
    - uses: actions/checkout@v2
      with:
        path: robotraconteur_debian_build
    - name: Download CI artifacts
      uses: actions/download-artifact@v2
      with:
        path: source-debs
    - name: apt update
      run: sudo apt update
    - name: apt
      run: >
        sudo apt-get install qemu 
        binfmt-support qemu-user-static 
        pbuilder debootstrap devscripts git-buildpackage 
        debian-keyring  debian-archive-keyring dh-make -qq
    - name: raspbian keyring
      if: ${{ matrix.config.os == 'raspbian' }}
      run: |
        wget http://archive.raspbian.org/raspbian/pool/main/r/raspbian-archive-keyring/raspbian-archive-keyring_20120528.2_all.deb
        sudo dpkg -i raspbian-archive-keyring_20120528.2_all.deb
    - name: cp pbuilderrc
      run: |
        cp robotraconteur_debian_build/pbuilderrc $HOME/.pbuilderrc
        sudo cp robotraconteur_debian_build/pbuilderrc /root/.pbuilderrc
    - name: pbuilder-create
      run: |
        sudo mkdir -p /var/cache/pbuilder/${{ matrix.config.os }}-${{ matrix.config.dist }}-${{ matrix.config.arch }}/aptcache/
        sudo OS=${{ matrix.config.os }} DIST=${{ matrix.config.dist }} ARCH=${{ matrix.config.arch }} pbuilder --create
    - name: extact-source-deb
      run: |
        dpkg-source -x source-debs/source-debs/${{ matrix.config.dist }}/robotraconteur_*~${{ matrix.config.dist }}.dsc src_deb
    - name: pbuilder-build
      working-directory: src_deb
      timeout-minutes: 720
      run: |
        OS=${{ matrix.config.os }} DIST=${{ matrix.config.dist }} ARCH=${{ matrix.config.arch }} pdebuild
    - name: archive result
      uses: actions/upload-artifact@v2
      with:
        name: 'result-${{ matrix.config.os }}-${{ matrix.config.dist }}-${{ matrix.config.arch }}'
        path: result/*
  build-release:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    needs:
    - build-source-debs
    - build-debian-buster
    steps:
    - uses: actions/checkout@v2
      with:
        path: robotraconteur_debian_build
    - name: download CI artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts
    - name: make archives
      run: |
        cp -r artifacts/source-debs srcdebs
        tar cf srcdebs.tar.gz srcdebs
        mkdir -p debs
        cp -r artifacts/result-* debs
        find debs -name *dbgsym* -exec rm {} \;
        tar cf debs.tar.gz debs
    - name: tag name env
      run: echo TAG_NAME=`cat robotraconteur_debian_build/upstream_tag_name`-`date +'%Y%m%d'`-unsigned >> $GITHUB_ENV
    - name: make release
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.BOT_GITHUB_TOKEN }}
        tag_name: ${{ env.TAG_NAME }}
        files: |
          srcdebs.tar.gz
          debs.tar.gz
    